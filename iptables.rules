#!/bin/bash
# chkconfig: 345 99 01
# description: Applies iptable rules on startup

### BEGIN INIT INFO
# Provides: iptables.rules
# Required-Start: iptables network
# Defalt-Start: 3 4 5
# Default-Stop: 0 1 6
# Description: Iptables rules
### END INIT INFO

#############
### Hosts ###
#############
HOSTS=()
HOSTS+=( 129.21.0.0/16 )
HOSTS+=( 74.70.0.0/16 )
HOSTS+=( 162.244.0.0/16 )
HOSTS+=( 162.248.0.0/16 )
HOSTS+=( 168.235.0.0/16 )

######################
### Port Variables ###
######################
# Input TCP - FILTERED BY HOSTS
INTCPFILTERED=()
#INTCPFILTERED+=(22922) #ssh in


# Input TCP - NOT FILTERED BY HOSTS
INTCP=()
#INTCP+=()

# Input UDP - FILTERED BY HOSTS
INUDPFILTERED=()
#INUDPFILTERED+=()

# Input UDP - NOT FILTERED BY HOSTS
INUDP=()
#INUDP+=()
#INUDP+=( 53 ) #dns

# Output TCP
OUTTCP=()
OUTTCP+=( 22 ) #ssh
OUTTCP+=( 53 ) #dns
OUTTCP+=( 80 ) #http
OUTTCP+=( 443 ) #https
OUTTCP+=( 465 ) #smtps
OUTTCP+=( 993 ) #imaps
#OUTTCP+=( 5000 )
OUTTCP+=( 6797 ) #irc
OUTTCP+=( 22922 ) #custom ssh
OUTTCP+=( 57178 )

# Output UDP
OUTUDP=()
OUTUDP+=( 53 ) #dns
OUTUDP+=( 80 ) #http
OUTUDP+=( 443 ) #https

###################
### Flush rules ###
###################
echo "Flushing rules"
iptables -F
iptables -F -t nat

#############################################################
### Default policies -> ACCEPT **last rule will be drop** ###
### Protects against iptables -F fails.                   ###
#############################################################
echo "Default policies -> ACCEPT - last rule will be drop."
for p in INPUT FORWARD OUTPUT
do
    iptables -P $p ACCEPT
done

###########################
### Accept all loopback ###
###########################
echo "Loopback rules -> accept"
iptables -A INPUT -i lo -m comment --comment "Loopback" -j ACCEPT
iptables -A OUTPUT -o lo -m comment --comment "Loopback" -j ACCEPT

############################################
### Allow ping out, block all other icmp ###
############################################
echo "Icmp rules -> accept outbound, deny all else"
iptables -A OUTPUT -p icmp --icmp-type 8 -m comment --comment "Allow ping requests output" -j ACCEPT
iptables -A INPUT -p icmp --icmp-type 0 -m comment --comment "Allow ping reply input" -j ACCEPT
iptables -A OUTPUT -p icmp -m comment --comment "Drop other ICMP output" -j DROP
iptables -A INPUT -p icmp -m comment --comment "Drop other ICMP input" -j DROP

##################
### Accept DNS ###
##################
iptables -A INPUT -p udp --sport 53 -j ACCEPT
iptables -A INPUT -p tcp --sport 53 -j ACCEPT

#########################
### Accept tcp inputs ###
### filtered by HOSTS ###
#########################
for h in ${HOSTS[@]};
do
    for p in ${INTCPFILTERED[@]}
    do
        echo "Input tcp rules -> accept $p from $h"
        iptables -A INPUT -s $h -p tcp --dport $p -j ACCEPT
    done
done

#############################
### Accept tcp inputs     ###
### NOT FILTERED by HOSTS ###
#############################
for p in ${INTCP[@]}
do
    echo "Input tcp rules -> accept $p from ALL"
    iptables -A INPUT -p tcp --dport $p -j ACCEPT
done

#########################
### Accept udp inputs ###
#########################
for h in ${HOSTS[@]};
do
    for p in ${INUDPFILTERED[@]}
    do
        echo "Input udp rules -> accept $p from $h"
        iptables -A INPUT -s $h -p udp --dport $p -j ACCEPT
    done
done

#############################
### Accept udp inputs     ###
### NOT FILTERED by HOSTS ###
#############################
for p in ${INUDP[@]}
do
    echo "Input udp rules -> accept $p from ALL"
    iptables -A INPUT -p udp --dport $p -j ACCEPT
done

#########################
### Accept tcp output ###
#########################
for p in ${OUTTCP[@]};
do
    echo "Output tcp rule -> accept $p"
    iptables -A OUTPUT -p tcp --dport $p -j ACCEPT
done

#########################
### Accept udp output ###
#########################
for p in ${OUTUDP[@]};
do
    echo "Output udp rule -> accept $p"
    iptables -A OUTPUT -p udp --dport $p -j ACCEPT
done

iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#########################
### LAST RULE -> DROP ###
#########################
echo "LAST RULE -> DROP"
for p in INPUT FORWARD OUTPUT
do
    iptables -A $p -j DROP
done

#######################
### Print new rules ###
#######################
iptables -nL


echo "Don't forget to save the rules!"
echo "\"iptables-save\""
